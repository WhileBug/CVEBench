
diff --git a/lib/dialects/mariadb/query-generator.js b/lib/dialects/mariadb/query-generator.js
index 8f0ce5f6d..c77d440ae 100644
--- a/lib/dialects/mariadb/query-generator.js
+++ b/lib/dialects/mariadb/query-generator.js
@@ -40,7 +40,9 @@ class MariaDBQueryGenerator extends MySQLQueryGenerator {
           condition =>
             `json_unquote(json_extract(${this.quoteIdentifier(
               condition.path[0])},'$.${_.tail(condition.path).join(
-              '.')}')) = '${condition.value}'`
+            `json_unquote(json_extract(${this.quoteIdentifier(
+              condition.path[0])},'$.${_.tail(condition.path).join(
+              '.')}')) = ${this.escape(condition.value)}`
         );
 
         return conditions.join(' and ');
diff --git a/lib/dialects/mysql/query-generator.js b/lib/dialects/mysql/query-generator.js
index 91458ef38..d8a45f442 100644
--- a/lib/dialects/mysql/query-generator.js
+++ b/lib/dialects/mysql/query-generator.js
@@ -209,7 +209,7 @@ class MySQLQueryGenerator extends AbstractQueryGenerator {
       // Parse nested object
       if (smth.conditions) {
         const conditions = this.parseConditionObject(smth.conditions).map(condition =>
-          `${this.quoteIdentifier(condition.path[0])}->>'$.${_.tail(condition.path).join('.')}' = '${condition.value}'`
+          `${this.quoteIdentifier(condition.path[0])}->>'$.${_.tail(condition.path).join('.')}' = ${this.escape(condition.value)}`
         );
 
         return conditions.join(' and ');
diff --git a/lib/dialects/sqlite/query-generator.js b/lib/dialects/sqlite/query-generator.js
index 66e416520..440dbd192 100644
--- a/lib/dialects/sqlite/query-generator.js
+++ b/lib/dialects/sqlite/query-generator.js
@@ -152,7 +152,7 @@ class SQLiteQueryGenerator extends MySqlQueryGenerator {
       // Parse nested object
       if (smth.conditions) {
         const conditions = this.parseConditionObject(smth.conditions).map(condition =>
-          `${this.jsonPathExtractionQuery(condition.path[0], _.tail(condition.path))} = '${condition.value}'`
+          `${this.jsonPathExtractionQuery(condition.path[0], _.tail(condition.path))} = ${this.escape(condition.value)}`
         );
 
         return conditions.join(' AND ');
