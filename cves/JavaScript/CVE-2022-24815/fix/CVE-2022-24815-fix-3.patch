
diff --git a/generators/server/templates/src/main/java/package/repository/EntityManager.java.ejs b/generators/server/templates/src/main/java/package/repository/EntityManager.java.ejs
index 24286eccda..b8d7ca2d92 100644
--- a/generators/server/templates/src/main/java/package/repository/EntityManager.java.ejs
+++ b/generators/server/templates/src/main/java/package/repository/EntityManager.java.ejs
@@ -96,7 +96,7 @@ public class EntityManager {
     public String createSelect(SelectFromAndJoin selectFrom, Class<?> entityType, Pageable pageable, Criteria criteria) {
         if (pageable != null) {
             if (criteria != null) {
-                return createSelectImpl(selectFrom.limitOffset(pageable.getPageSize(), pageable.getOffset()).where(Conditions.just(criteria.toString())), entityType, pageable.getSort());
+                return createSelectImpl(selectFrom.limitOffset(pageable.getPageSize(), pageable.getOffset()).where(Conditions.just(sanitizeCriteria(criteria.toString()))), entityType, pageable.getSort());
             } else {
                 return createSelectImpl(selectFrom.limitOffset(pageable.getPageSize(), pageable.getOffset()), entityType, pageable.getSort());
             }
@@ -132,7 +132,11 @@ public class EntityManager {
         }
     }
 
-    private String createSelectImpl(SelectOrdered selectFrom, Class<?> entityType, Sort sortParameter) {
+    private String sanitizeCriteria(String criteriaStr) {
+        // Placeholder for criteria sanitization logic
+        // TODO: Implement robust sanitization logic here
+        return criteriaStr.replaceAll("'", "''"); // Simple SQL escape for single quotes
+    }
         if (sortParameter != null && sortParameter.isSorted()) {
             RelationalPersistentEntity<?> entity = getPersistentEntity(entityType);
             if (entity != null) {
