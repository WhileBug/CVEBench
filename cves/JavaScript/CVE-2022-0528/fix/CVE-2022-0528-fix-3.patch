
diff --git a/packages/@uppy/companion/src/server/controllers/url.js b/packages/@uppy/companion/src/server/controllers/url.js
index b7bc41c5f..fa56271ad 100644
--- a/packages/@uppy/companion/src/server/controllers/url.js
+++ b/packages/@uppy/companion/src/server/controllers/url.js
@@ -68,7 +68,7 @@ const downloadURL = async (url, blockLocalIPs, traceId) => {
         resolve(resp)
       })
       .on('error', (err) => {
-        logger.error(err, 'controller.url.download.error', traceId)
+        logger.error(logger.maskMessage(err), 'controller.url.download.error', traceId)
         reject(err)
       })
   })
@@ -92,7 +92,7 @@ const meta = async (req, res) => {
     const urlMeta = await getURLMeta(req.body.url, !debug)
     return res.json(urlMeta)
   } catch (err) {
-    logger.error(err, 'controller.url.meta.error', req.id)
+        logger.error(logger.maskMessage(err), 'controller.url.meta.error', req.id)
     // @todo send more meaningful error message and status code to client if possible
     return res.status(err.status || 500).json({ message: 'failed to fetch URL metadata' })
   }
@@ -124,7 +124,7 @@ const get = async (req, res) => {
   }
 
   function onUnhandledError (err) {
-    logger.error(err, 'controller.url.error', req.id)
+        logger.error(logger.maskMessage(err), 'controller.url.error', req.id)
     // @todo send more meaningful error message and status code to client if possible
     res.status(err.status || 500).json({ message: 'failed to fetch URL metadata' })
   }
diff --git a/packages/@uppy/companion/src/server/provider/facebook/index.js b/packages/@uppy/companion/src/server/provider/facebook/index.js
index 6e684dbdb..b2bd379a6 100644
--- a/packages/@uppy/companion/src/server/provider/facebook/index.js
+++ b/packages/@uppy/companion/src/server/provider/facebook/index.js
@@ -48,7 +48,7 @@ class Facebook extends Provider {
       .request((err, resp, body) => {
         if (err || resp.statusCode !== 200) {
           err = this._error(err, resp)
-          logger.error(err, 'provider.facebook.list.error')
+          logger.error(logger.maskMessage(err), 'provider.facebook.list.error')
           return done(err)
         }
         this._getUsername(token, (err, username) => {
@@ -69,7 +69,7 @@ class Facebook extends Provider {
       .request((err, resp, body) => {
         if (err || resp.statusCode !== 200) {
           err = this._error(err, resp)
-          logger.error(err, 'provider.facebook.user.error')
+          logger.error(logger.maskMessage(err), 'provider.facebook.user.error')
           return done(err)
         }
         done(null, body.email)
diff --git a/packages/@uppy/companion/src/server/provider/instagram/graph/index.js b/packages/@uppy/companion/src/server/provider/instagram/graph/index.js
index 79b380d5c..e7f30ec1d 100644
--- a/packages/@uppy/companion/src/server/provider/instagram/graph/index.js
+++ b/packages/@uppy/companion/src/server/provider/instagram/graph/index.js
@@ -49,7 +49,7 @@ class Instagram extends Provider {
       .request((err, resp, body) => {
         if (err || resp.statusCode !== 200) {
           err = this._error(err, resp)
-          logger.error(err, 'provider.instagram.list.error')
+          logger.error(logger.maskMessage(err), 'provider.instagram.list.error')
           return done(err)
         }
         this._getUsername(token, (err, username) => {
@@ -67,7 +67,7 @@ class Instagram extends Provider {
       .request((err, resp, body) => {
         if (err || resp.statusCode !== 200) {
           err = this._error(err, resp)
-          logger.error(err, 'provider.instagram.user.error')
+          logger.error(logger.maskMessage(err), 'provider.instagram.user.error')
           return done(err)
         }
         done(null, body.username)
