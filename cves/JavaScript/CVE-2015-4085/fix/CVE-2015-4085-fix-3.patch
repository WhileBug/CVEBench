
diff --git a/src/node/hooks/express/tests.js b/src/node/hooks/express/tests.js
index 3157d68e..1fe6eff0 100644
--- a/src/node/hooks/express/tests.js
+++ b/src/node/hooks/express/tests.js
@@ -23,17 +23,24 @@ exports.expressCreateServer = function (hook_name, args, cb) {
 
   });
 
-  var url2FilePath = function(url){
+var url2FilePath = function(url){
     var subPath = url.substr("/tests/frontend".length);
     if (subPath == ""){
-      subPath = "index.html"
+        subPath = "index.html"
     }
     subPath = subPath.split("?")[0];
 
-    var filePath = path.normalize(npm.root + "/../tests/frontend/")
-    filePath += subPath.replace("..", "");
-    return filePath;
-  }
+    // Resolve the path to ensure it's within the intended directory
+    var basePath = path.resolve(npm.root, "../tests/frontend/");
+    var resolvedPath = path.resolve(basePath, subPath);
+
+    // Check if the resolved path starts with the base path
+    if (!resolvedPath.startsWith(basePath)) {
+        throw new Error("Invalid path");
+    }
+
+    return resolvedPath;
+}
 
   args.app.get('/tests/frontend/specs/*', function (req, res) {
     var specFilePath = url2FilePath(req.url);
diff --git a/tests/backend/specs/api/url2FilePathTest.js b/tests/backend/specs/api/url2FilePathTest.js
new file mode 100644
index 00000000..9d2cfd2d
--- /dev/null
+++ b/tests/backend/specs/api/url2FilePathTest.js
@@ -0,0 +1,27 @@
+const assert = require('assert');
+const path = require('path');
+const { url2FilePath } = require('../../../../../src/node/hooks/express/tests');
+
+function testPreventDirectoryTraversal() {
+    const maliciousUrl = "/tests/frontend/../../etc/passwd";
+    try {
+        url2FilePath(maliciousUrl);
+        console.error('Test failed: Directory traversal was not prevented.');
+    } catch (error) {
+        console.log('Test passed: Directory traversal was prevented.');
+    }
+}
+
+function testResolveValidPaths() {
+    const validUrl = "/tests/frontend/index.html";
+    const expectedPath = path.resolve(npm.root, "../tests/frontend/index.html");
+    try {
+        assert.strictEqual(url2FilePath(validUrl), expectedPath);
+        console.log('Test passed: Valid path resolved correctly.');
+    } catch (error) {
+        console.error('Test failed: Valid path did not resolve correctly.');
+    }
+}
+
+testPreventDirectoryTraversal();
+testResolveValidPaths();
