
diff --git a/src/js/utils/url.js b/src/js/utils/url.js
index 78f30e89..78b80d2e 100644
--- a/src/js/utils/url.js
+++ b/src/js/utils/url.js
@@ -90,8 +90,30 @@ export const parseUrl = function(url) {
     document.body.removeChild(div);
   }
 
-  return details;
-};
+    details = sanitizeUrl(details);
+    return details;
+/**
+ * Sanitizes URL components by escaping HTML characters and other potential security threats.
+ *
+ * @param {Object} details - The URL details object to sanitize.
+ * @return {Object} - The sanitized URL details object.
+ */
+function sanitizeUrl(details) {
+    const sanitizedDetails = {};
+    Object.keys(details).forEach(key => {
+        sanitizedDetails[key] = details[key].replace(/[&<>"'/]/g, function(match) {
+            return {
+                '&': '&amp;',
+                '<': '&lt;',
+                '>': '&gt;',
+                '"': '&quot;',
+                "'": '&#39;',
+                '/': '&#47;'
+            }[match];
+        });
+    });
+    return sanitizedDetails;
+}
 
 /**
  * Get absolute version of relative URL. Used to tell Flash the correct URL.
diff --git a/test_url.js b/test_url.js
new file mode 100644
index 00000000..45d76ef8
--- /dev/null
+++ b/test_url.js
@@ -0,0 +1,9 @@
+import { parseUrl } from './src/js/utils/url.js';
+
+// Example URL that attempts to inject HTML/JS code
+const maliciousUrl = "http://example.com/?param=<script>alert('xss')</script>";
+
+// Parsing the malicious URL
+const parsedDetails = parseUrl(maliciousUrl);
+
+console.log("Parsed URL Details:", parsedDetails);
