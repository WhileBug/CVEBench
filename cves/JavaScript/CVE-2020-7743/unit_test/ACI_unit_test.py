import json

# Simulating the deepExtend function which is vulnerable to prototype pollution
def deepExtend(target, source):
    for key, value in source.items():
        if isinstance(value, dict):
            node = target.setdefault(key, {})
            deepExtend(node, value)
        else:
            target[key] = value

# Exploit: Polluting the Object prototype
payload = json.loads('{"__proto__": {"polluted": "Yes"}}')
target = {}
deepExtend(target, payload)

# Checking if the prototype pollution was successful
if 'polluted' in {}:
    print('The ACI exploit success!!!')
else:
    print('The ACI exploit failed!!!')
