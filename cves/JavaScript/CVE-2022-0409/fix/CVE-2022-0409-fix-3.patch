
diff --git a/server/Application/Api/Model/AttachmentModel.class.php b/server/Application/Api/Model/AttachmentModel.class.php
index fca86680..0194826d 100644
--- a/server/Application/Api/Model/AttachmentModel.class.php
+++ b/server/Application/Api/Model/AttachmentModel.class.php
@@ -54,80 +54,79 @@ class AttachmentModel extends BaseModel {
 	}
 
 	//上传文件，返回url
-	public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){
-		$uploadFile = $_files[$file_key] ;
-
-		if (strstr(strip_tags(strtolower($uploadFile['name'])), ".php")
-		||  strstr(strip_tags(strtolower($uploadFile['name'])), ".php")
-		||  strstr(strip_tags(strtolower($uploadFile['name'])), ".svg")
-		
-		) {
-			return false;
-	}
-		$oss_open = D("Options")->get("oss_open" ) ;
-		if ($oss_open) {
-				$url = $this->uploadOss($uploadFile);
-				if ($url) {
-						$sign = md5($url.time().rand()) ;
-						$insert = array(
-						"sign" => $sign,
-						"uid" => $uid,
-						"item_id" => $item_id,
-						"page_id" => $page_id,
-						"display_name" => $uploadFile['name'],
-						"file_type" => $uploadFile['type'],
-						"file_size" => $uploadFile['size'],
-						"real_url" => $url,
-						"addtime" => time(),
-						);
-						$file_id = D("UploadFile")->add($insert);
-						$insert = array(
-							"file_id" => $file_id,
-							"item_id" => $item_id,
-							"page_id" => $page_id,
-							"addtime" => time(),
-							);
-						$ret = D("FilePage")->add($insert);
-						$url = server_url("api/attachment/visitFile",array("sign" => $sign)); 
-					  return $url ;
-				}
-		}else{
-			$upload = new \Think\Upload();// 实例化上传类
-			$upload->maxSize  = 1003145728 ;// 设置附件上传大小
-			$upload->rootPath = './../Public/Uploads/';// 设置附件上传目录
-			$upload->savePath = '';// 设置附件上传子目录
-			$info = $upload->uploadOne($uploadFile) ;
-			if(!$info) {// 上传错误提示错误信息
-				var_dump($upload->getError());
-				return;
-			}else{// 上传成功 获取上传文件信息
-				$url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;
-				$sign = md5($url.time().rand()) ;
-				$insert = array(
-					"sign" => $sign,
-					"uid" => $uid,
-					"item_id" => $item_id,
-					"page_id" => $page_id,
-					"display_name" => $uploadFile['name'],
-					"file_type" => $uploadFile['type'],
-					"file_size" => $uploadFile['size'],
-					"real_url" => $url,
-					"addtime" => time(),
-					);
-					$file_id = D("UploadFile")->add($insert);
-					$insert = array(
-						"file_id" => $file_id,
-						"item_id" => $item_id,
-						"page_id" => $page_id,
-						"addtime" => time(),
-						);
-					$ret = D("FilePage")->add($insert);
-				$url = server_url("api/attachment/visitFile",array("sign" => $sign));
-				return $url ;
-			}
-		}
-		return false;
-	}
+public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){
+    $uploadFile = $_files[$file_key] ;
+    $allowedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'txt', 'pdf', 'doc', 'docx']; // Whitelist of allowed file extensions
+    $fileExtension = strtolower(pathinfo($uploadFile['name'], PATHINFO_EXTENSION));
+
+    if (!in_array($fileExtension, $allowedExtensions)) {
+        return false; // Block the upload if the file extension is not in the whitelist
+    }
+
+    $oss_open = D("Options")->get("oss_open" ) ;
+    if ($oss_open) {
+        $url = $this->uploadOss($uploadFile);
+        if ($url) {
+            $sign = md5($url.time().rand()) ;
+            $insert = array(
+                "sign" => $sign,
+                "uid" => $uid,
+                "item_id" => $item_id,
+                "page_id" => $page_id,
+                "display_name" => $uploadFile['name'],
+                "file_type" => $uploadFile['type'],
+                "file_size" => $uploadFile['size'],
+                "real_url" => $url,
+                "addtime" => time(),
+            );
+            $file_id = D("UploadFile")->add($insert);
+            $insert = array(
+                "file_id" => $file_id,
+                "item_id" => $item_id,
+                "page_id" => $page_id,
+                "addtime" => time(),
+            );
+            $ret = D("FilePage")->add($insert);
+            $url = server_url("api/attachment/visitFile",array("sign" => $sign)); 
+            return $url ;
+        }
+    } else {
+        $upload = new \Think\Upload();// 实例化上传类
+        $upload->maxSize  = 1003145728 ;// 设置附件上传大小
+        $upload->rootPath = './../Public/Uploads/';// 设置附件上传目录
+        $upload->savePath = '';// 设置附件上传子目录
+        $info = $upload->uploadOne($uploadFile) ;
+        if(!$info) {// 上传错误提示错误信息
+            var_dump($upload->getError());
+            return;
+        } else {// 上传成功 获取上传文件信息
+            $url = site_url().'/Public/Uploads/'.$info['savepath'].$info['savename'] ;
+            $sign = md5($url.time().rand()) ;
+            $insert = array(
+                "sign" => $sign,
+                "uid" => $uid,
+                "item_id" => $item_id,
+                "page_id" => $page_id,
+                "display_name" => $uploadFile['name'],
+                "file_type" => $uploadFile['type'],
+                "file_size" => $uploadFile['size'],
+                "real_url" => $url,
+                "addtime" => time(),
+            );
+            $file_id = D("UploadFile")->add($insert);
+            $insert = array(
+                "file_id" => $file_id,
+                "item_id" => $item_id,
+                "page_id" => $page_id,
+                "addtime" => time(),
+            );
+            $ret = D("FilePage")->add($insert);
+            $url = server_url("api/attachment/visitFile",array("sign" => $sign));
+            return $url ;
+        }
+    }
+    return false;
+}
 
   	//上传到oss。参数$uploadFile是文件上传流，如$_FILES['file'] .也可以自己拼凑
 	public function uploadOss($uploadFile){
@@ -292,4 +291,4 @@ class AttachmentModel extends BaseModel {
 
 
 
-}
\ No newline at end of file
+}
