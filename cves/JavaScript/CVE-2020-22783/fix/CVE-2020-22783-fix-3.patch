
diff --git a/encryptionHelpers.js b/encryptionHelpers.js
new file mode 100644
index 00000000..148c3a73
--- /dev/null
+++ b/encryptionHelpers.js
@@ -0,0 +1,10 @@
+const crypto = require('crypto');
+
+function encryptSessionData(sessionData) {
+    const cipher = crypto.createCipher('aes-256-cbc', 'a_secret_key');
+    let encrypted = cipher.update(JSON.stringify(sessionData), 'utf8', 'hex');
+    encrypted += cipher.final('hex');
+    return encrypted;
+}
+
+module.exports = { encryptSessionData };
diff --git a/src/node/db/SessionStore.js b/src/node/db/SessionStore.js
index 647cbbc8..82bcb7f5 100644
--- a/src/node/db/SessionStore.js
+++ b/src/node/db/SessionStore.js
@@ -1,4 +1,10 @@
-/*
+var Store = require('ep_etherpad-lite/node_modules/express-session').Store,
+    db = require('ep_etherpad-lite/node/db/DB').db,
+    log4js = require('ep_etherpad-lite/node_modules/log4js'),
+    messageLogger = log4js.getLogger("SessionStore"),
+    encryptSessionData = require('../../encryptionHelpers').encryptSessionData;
+
+var SessionStore = module.exports = function SessionStore() {};
  * Stores session data in the database
  * Source; https://github.com/edy-b/SciFlowWriter/blob/develop/available_plugins/ep_sciflowwriter/db/DirtyStore.js
  * This is not used for authors that are created via the API at current
@@ -35,14 +41,13 @@ SessionStore.prototype.get = function(sid, fn) {
   });
 };
 
-SessionStore.prototype.set = function(sid, sess, fn) {
   messageLogger.debug('SET ' + sid);
-
-  db.set("sessionstorage:" + sid, sess);
+  // Encrypt session data before storing
+  var encryptedSession = encryptSessionData(sess);
+  db.set("sessionstorage:" + sid, encryptedSession);
   if (fn) {
     process.nextTick(fn);
   }
-};
 
 SessionStore.prototype.destroy = function(sid, fn) {
   messageLogger.debug('DESTROY ' + sid);
