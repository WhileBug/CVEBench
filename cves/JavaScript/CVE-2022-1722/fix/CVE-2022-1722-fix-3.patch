
diff --git a/src/main/java/com/mxgraph/online/ProxyServlet.java b/src/main/java/com/mxgraph/online/ProxyServlet.java
index 99a88937..06bdd511 100644
--- a/src/main/java/com/mxgraph/online/ProxyServlet.java
+++ b/src/main/java/com/mxgraph/online/ProxyServlet.java
@@ -238,65 +238,66 @@ public class ProxyServlet extends HttpServlet
 	/**
 	 * Checks if the URL parameter is legal.
 	 */
-	public boolean checkUrlParameter(String url)
-	{
-		if (url != null)
-		{
-			try
-			{
-				URL parsedUrl = new URL(url);
-				String protocol = parsedUrl.getProtocol();
-				String host = parsedUrl.getHost();
-				InetAddress address = InetAddress.getByName(host);
-				String hostAddress = address.getHostAddress();
-				host = host.toLowerCase();
+public boolean checkUrlParameter(String url)
+{
+    if (url != null)
+    {
+        try
+        {
+            URL parsedUrl = new URL(url);
+            String protocol = parsedUrl.getProtocol();
+            String host = parsedUrl.getHost();
+            InetAddress address = InetAddress.getByName(host);
+            String hostAddress = address.getHostAddress();
+            host = host.toLowerCase();
 
-				return (protocol.equals("http") || protocol.equals("https"))
-						&& !address.isAnyLocalAddress()
-						&& !address.isLoopbackAddress()
-						&& !host.endsWith(".internal") // Redundant
-						&& !host.endsWith(".local") // Redundant
-						&& !host.contains("localhost") // Redundant
-						&& !hostAddress.startsWith("0.") // 0.0.0.0/8 
-						&& !hostAddress.startsWith("10.") // 10.0.0.0/8
-						&& !hostAddress.startsWith("127.") // 127.0.0.0/8
-						&& !hostAddress.startsWith("169.254.") // 169.254.0.0/16
-						&& !hostAddress.startsWith("172.16.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.17.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.18.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.19.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.20.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.21.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.22.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.23.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.24.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.25.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.26.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.27.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.28.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.29.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.30.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.31.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("192.0.0.") // 192.0.0.0/24
-						&& !hostAddress.startsWith("192.168.") // 192.168.0.0/16
-						&& !hostAddress.startsWith("198.18.") // 198.18.0.0/15
-						&& !hostAddress.startsWith("198.19.") // 198.18.0.0/15
-						&& !host.endsWith(".arpa"); // reverse domain (needed?)
-			}
-			catch (MalformedURLException e)
-			{
-				return false;
-			}
-			catch (UnknownHostException e)
-			{
-				return false;
-			}
-		}
-		else
-		{
-			return false;
-		}
-	}
+            return (protocol.equals("http") || protocol.equals("https"))
+                    && !address.isAnyLocalAddress()
+                    && !address.isLoopbackAddress()
+                    && !host.endsWith(".internal") // Redundant
+                    && !host.endsWith(".local") // Redundant
+                    && !host.contains("localhost") // Redundant
+                    && !hostAddress.startsWith("0.") // 0.0.0.0/8 
+                    && !hostAddress.startsWith("10.") // 10.0.0.0/8
+                    && !hostAddress.startsWith("127.") // 127.0.0.0/8
+                    && !hostAddress.startsWith("169.254.") // 169.254.0.0/16
+                    && !hostAddress.startsWith("172.16.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.17.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.18.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.19.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.20.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.21.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.22.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.23.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.24.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.25.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.26.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.27.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.28.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.29.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.30.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("172.31.") // 172.16.0.0/12
+                    && !hostAddress.startsWith("192.0.0.") // 192.0.0.0/24
+                    && !hostAddress.startsWith("192.168.") // 192.168.0.0/16
+                    && !hostAddress.startsWith("198.18.") // 198.18.0.0/15
+                    && !hostAddress.startsWith("198.19.") // 198.18.0.0/15
+                    && !hostAddress.startsWith("fe80:") // IPv6 link-local addresses
+                    && !host.endsWith(".arpa"); // reverse domain (needed?)
+        }
+        catch (MalformedURLException e)
+        {
+            return false;
+        }
+        catch (UnknownHostException e)
+        {
+            return false;
+        }
+    }
+    else
+    {
+        return false;
+    }
+}
 
 	/**
 	 * Returns true if the content check should be omitted.
