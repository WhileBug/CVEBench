
diff --git a/packages/pug-code-gen/index.js b/packages/pug-code-gen/index.js
index a75929c..3efd588 100644
--- a/packages/pug-code-gen/index.js
+++ b/packages/pug-code-gen/index.js
@@ -53,10 +53,15 @@ function Compiler(node, options) {
   this.bufferedConcatenationCount = 0;
   this.hasCompiledDoctype = false;
   this.hasCompiledTag = false;
-  this.pp = options.pretty || false;
-  if (this.pp && typeof this.pp !== 'string') {
-    this.pp = '  ';
-  }
+        this.pp = options.pretty || false;
+        // Validate the 'pretty' option to prevent unsafe input
+        if (typeof this.pp === 'string') {
+          if (!['', '  ', '    '].includes(this.pp)) {
+            throw new Error('Invalid pretty option');
+          }
+        } else if (this.pp !== false) {
+          throw new Error('Pretty option must be a boolean or a safe string');
+        }
   this.debug = false !== options.compileDebug;
   this.indents = 0;
   this.parentIndents = 0;
diff --git a/testCompiler.js b/testCompiler.js
new file mode 100644
index 0000000..256d096
--- /dev/null
+++ b/testCompiler.js
@@ -0,0 +1,38 @@
+const { Compiler } = require('./packages/pug-code-gen/index.js');
+
+// Test cases for the 'pretty' option
+function testPrettyOption() {
+  try {
+    // Test with a valid string option
+    new Compiler(null, { pretty: '  ' });
+    console.log('Test with valid string passed.');
+  } catch (error) {
+    console.error('Test with valid string failed:', error.message);
+  }
+
+  try {
+    // Test with an invalid string option
+    new Compiler(null, { pretty: 'unsafe_string' });
+    console.log('Test with invalid string should not pass.');
+  } catch (error) {
+    console.log('Test with invalid string passed:', error.message);
+  }
+
+  try {
+    // Test with a boolean option
+    new Compiler(null, { pretty: false });
+    console.log('Test with boolean false passed.');
+  } catch (error) {
+    console.error('Test with boolean false failed:', error.message);
+  }
+
+  try {
+    // Test with an invalid type
+    new Compiler(null, { pretty: 123 });
+    console.log('Test with invalid type should not pass.');
+  } catch (error) {
+    console.log('Test with invalid type passed:', error.message);
+  }
+}
+
+testPrettyOption();
