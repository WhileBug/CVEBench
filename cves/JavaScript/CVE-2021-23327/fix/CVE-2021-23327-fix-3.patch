
diff --git a/src/modules/legend/Legend.js b/src/modules/legend/Legend.js
index ec1f4a22..d1e32ab4 100644
--- a/src/modules/legend/Legend.js
+++ b/src/modules/legend/Legend.js
@@ -93,7 +93,7 @@ class Legend {
       isLegendInversed ? i >= 0 : i <= legendNames.length - 1;
       isLegendInversed ? i-- : i++
     ) {
-      let text = legendFormatter(legendNames[i], { seriesIndex: i, w })
+      let text = Utils.escapeHtml(legendFormatter(legendNames[i], { seriesIndex: i, w }))
 
       let collapsedSeries = false
       let ancillaryCollapsedSeries = false
diff --git a/src/modules/legend/test_legend_sanitization.js b/src/modules/legend/test_legend_sanitization.js
new file mode 100644
index 00000000..607146f0
--- /dev/null
+++ b/src/modules/legend/test_legend_sanitization.js
@@ -0,0 +1,24 @@
+const Legend = require('./Legend.js');
+const Utils = require('../../utils/Utils');
+
+// Mock global and config objects
+const w = {
+  globals: {
+    seriesNames: ['<script>alert("XSS")</script>'],
+    legendFormatter: function(name) { return name; }
+  },
+  config: {
+    legend: {
+      show: true,
+      position: 'bottom'
+    }
+  }
+};
+
+// Create a new Legend instance
+const legend = new Legend({ w });
+
+// Simulate the drawing of legends which should now sanitize input
+legend.drawLegends();
+
+console.log('Test completed successfully, no errors.');
