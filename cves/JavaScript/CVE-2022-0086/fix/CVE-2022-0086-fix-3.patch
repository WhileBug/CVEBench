
diff --git a/packages/@uppy/companion/src/server/helpers/request.js b/packages/@uppy/companion/src/server/helpers/request.js
index bdd5bb4a2..1edfe21bc 100644
--- a/packages/@uppy/companion/src/server/helpers/request.js
+++ b/packages/@uppy/companion/src/server/helpers/request.js
@@ -28,40 +28,29 @@ function isIPAddress (address) {
 function isPrivateIP (ipAddress) {
   let isPrivate = false
   // Build the list of IP prefix for V4 and V6 addresses
-  const ipPrefix = []
-  // Add prefix for loopback addresses
-  ipPrefix.push('127.')
-  ipPrefix.push('0.')
-  // Add IP V4 prefix for private addresses
-  // See https://en.wikipedia.org/wiki/Private_network
-  ipPrefix.push('10.')
-  ipPrefix.push('172.16.')
-  ipPrefix.push('172.17.')
-  ipPrefix.push('172.18.')
-  ipPrefix.push('172.19.')
-  ipPrefix.push('172.20.')
-  ipPrefix.push('172.21.')
-  ipPrefix.push('172.22.')
-  ipPrefix.push('172.23.')
-  ipPrefix.push('172.24.')
-  ipPrefix.push('172.25.')
-  ipPrefix.push('172.26.')
-  ipPrefix.push('172.27.')
-  ipPrefix.push('172.28.')
-  ipPrefix.push('172.29.')
-  ipPrefix.push('172.30.')
-  ipPrefix.push('172.31.')
-  ipPrefix.push('192.168.')
-  ipPrefix.push('169.254.')
-  // Add IP V6 prefix for private addresses
-  // See https://en.wikipedia.org/wiki/Unique_local_address
-  // See https://en.wikipedia.org/wiki/Private_network
-  // See https://simpledns.com/private-ipv6
-  ipPrefix.push('fc')
-  ipPrefix.push('fd')
-  ipPrefix.push('fe')
-  ipPrefix.push('ff')
-  ipPrefix.push('::1')
+    const ipPrefix = [
+        '127.',  // loopback
+        '0.',    // current network (only valid as source address)
+        '10.',   // private network
+        '172.16.', '172.17.', '172.18.', '172.19.',
+        '172.20.', '172.21.', '172.22.', '172.23.',
+        '172.24.', '172.25.', '172.26.', '172.27.',
+        '172.28.', '172.29.', '172.30.', '172.31.',  // private network (contiguous range)
+        '192.168.',  // private network
+        '169.254.',  // link local
+        '100.64.', '100.65.', '100.66.', '100.67.',
+        '100.68.', '100.69.', '100.70.', '100.71.',
+        '100.72.', '100.73.', '100.74.', '100.75.',
+        '100.76.', '100.77.', '100.78.', '100.79.',
+        '100.80.', '100.81.', '100.82.', '100.83.',
+        '100.84.', '100.85.', '100.86.', '100.87.',
+        '100.88.', '100.89.', '100.90.', '100.91.',
+        '100.92.', '100.93.', '100.94.', '100.95.',
+        '100.96.', '100.97.', '100.98.', '100.99.',  // carrier-grade NAT
+        'fc', 'fd',  // unique local addresses (IPv6)
+        'fe', 'ff',  // link-local addresses (IPv6)
+        '::1'  // IPv6 loopback
+    ];
   // Verify the provided IP address
   // Remove whitespace characters from the beginning/end of the string
   // and convert it to lower case
@@ -115,9 +104,9 @@ function dnsLookup (hostname, options, callback) {
 
     const toValidate = Array.isArray(addresses) ? addresses : [{ address: addresses }]
     for (const record of toValidate) {
-      if (isPrivateIP(record.address)) {
-        callback(new Error(FORBIDDEN_IP_ADDRESS), addresses, maybeFamily)
-        return
+      logger.warn(`Attempt to access private IP: ${record.address}`, 'SSRF prevention');
+      callback(new Error(FORBIDDEN_IP_ADDRESS), addresses, maybeFamily);
+      return;
       }
     }
 
