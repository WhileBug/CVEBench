
diff --git a/src/node/hooks/express/webaccess.js b/src/node/hooks/express/webaccess.js
index 1faceec7..fb869613 100644
--- a/src/node/hooks/express/webaccess.js
+++ b/src/node/hooks/express/webaccess.js
@@ -20,11 +20,16 @@ exports.basicAuth = function (req, res, next) {
     // Do not require auth for static paths and the API...this could be a bit brittle
     if (req.path.match(/^\/(static|javascripts|pluginfw|api)/)) return cb(true);
 
-    if (req.path.indexOf('/admin') != 0) {
-      if (!settings.requireAuthentication) return cb(true);
-      if (!settings.requireAuthorization && req.session && req.session.user) return cb(true);
+    // Ensure that admin paths are strictly protected
+    if (req.path.indexOf('/admin') === 0) {
+      if (!req.session || !req.session.user || !req.session.user.is_admin) {
+        return cb(false); // Block access if not an admin
+      }
     }
 
+    if (!settings.requireAuthentication) return cb(true);
+    if (!settings.requireAuthorization && req.session && req.session.user) return cb(true);
+
     if (req.session && req.session.user && req.session.user.is_admin) return cb(true);
 
     hooks.aCallFirst("authorize", {req: req, res:res, next:next, resource: req.path}, hookResultMangle(cb));
@@ -48,10 +53,13 @@ exports.basicAuth = function (req, res, next) {
   }
 
 
+  /* Authentication OR authorization failed. */
   /* Authentication OR authorization failed. */
   var failure = function () {
+    console.log('Authentication failed for user:', req.session.user ? req.session.user.username : 'Unknown');
+    req.session.destroy();  // Invalidate the session on failure
     return hooks.aCallFirst("authFailure", {req: req, res:res, next:next}, hookResultMangle(function (ok) {
-    if (ok) return;
+      if (ok) return;
       /* No plugin handler for invalid auth. Return Auth required
        * Headers, delayed for 1 second, if authentication failed
        * before. */
