
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 00000000..2a20ad78
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,26 @@
+import requests
+import responses
+
+# URL of the application vulnerable to CVE
+url = "http://localhost:8000/upload"
+
+@responses.activate
+def test_upload():
+    # Prepare the payload that should be blocked but might be allowed due to the CVE
+    files = {'file': ('exploit.html', '<script>alert("XSS")</script>', 'text/html')}
+    data = {'submit': 'Upload'}
+
+    # Mock the response to simulate a successful upload
+    responses.add(responses.POST, url, body='<script>alert("XSS")</script>', status=200)
+
+    # Send the request to upload the file
+    response = requests.post(url, files=files, data=data)
+
+    # Check if the upload was successful and if the payload is executable
+    if '<script>alert("XSS")</script>' in response.text:
+        print('The ACI exploit success!!!')
+    else:
+        print('The ACI exploit failed!!!')
+
+# Run the test function
+test_upload()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100644
index 00000000..b2d60082
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,10 @@
+#!/bin/bash
+
+# Setup the environment for the repository
+echo "Setting up the environment..."
+# Assuming the setup commands based on typical Python project setup steps
+pip install -r requirements.txt
+
+# Run the Python unit test script
+echo "Running the unit test script..."
+python ACI_unit_test.py
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 00000000..76c28c5b
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,2 @@
+requests
+responses
