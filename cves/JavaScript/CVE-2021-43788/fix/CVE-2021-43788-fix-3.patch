
diff --git a/src/languages.js b/src/languages.js
index 200ec2a191..5c543e141d 100644
--- a/src/languages.js
+++ b/src/languages.js
@@ -13,14 +13,18 @@ const files = fs.readdirSync(path.join(paths.nodeModules, '/timeago/locales'));
 Languages.timeagoCodes = files.filter(f => f.startsWith('jquery.timeago')).map(f => f.split('.')[2]);
 
 Languages.get = async function (language, namespace) {
-	const data = await fs.promises.readFile(path.join(languagesPath, language, `${namespace}.json`), 'utf8');
-	const parsed = JSON.parse(data) || {};
-	const result = await plugins.hooks.fire('filter:languages.get', {
-		language,
-		namespace,
-		data: parsed,
-	});
-	return result.data;
+    // Validate input to prevent path traversal
+    if (language.includes('..') || namespace.includes('..')) {
+        throw new Error('Invalid input');
+    }
+    const data = await fs.promises.readFile(path.join(languagesPath, language, `${namespace}.json`), 'utf8');
+    const parsed = JSON.parse(data) || {};
+    const result = await plugins.hooks.fire('filter:languages.get', {
+        language,
+        namespace,
+        data: parsed,
+    });
+    return result.data;
 };
 
 let codeCache = null;
diff --git a/test_path_traversal.js b/test_path_traversal.js
new file mode 100644
index 0000000000..17fbc2ded1
--- /dev/null
+++ b/test_path_traversal.js
@@ -0,0 +1,12 @@
+const Languages = require('./src/languages');
+
+async function testPathTraversal() {
+    try {
+        const result = await Languages.get('../', 'config');
+        console.log('Test failed: Path traversal was not prevented.');
+    } catch (error) {
+        console.log('Test passed: Path traversal was prevented.', error.message);
+    }
+}
+
+testPathTraversal();
