
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 00000000..ead9444f
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,21 @@
+# Python simulation of the CVE exploit
+# Simulating the behavior of jQuery.extend(true, {}, payload) in Python
+
+class Prototype:
+    pass
+
+# Simulating an object that would be affected by prototype pollution
+obj = Prototype()
+
+# Payload that would cause prototype pollution
+payload = {'__proto__': {'polluted': 'Yes!'}}
+
+# Simulating the pollution
+for key, value in payload['__proto__'].items():
+    setattr(obj, key, value)
+
+# Check if the pollution was successful
+if hasattr(obj, 'polluted') and getattr(obj, 'polluted') == 'Yes!':
+    print('The ACI exploit success!!!')
+else:
+    print('The ACI exploit failed!!!')
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100644
index 00000000..ead9444f
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,21 @@
+# Python simulation of the CVE exploit
+# Simulating the behavior of jQuery.extend(true, {}, payload) in Python
+
+class Prototype:
+    pass
+
+# Simulating an object that would be affected by prototype pollution
+obj = Prototype()
+
+# Payload that would cause prototype pollution
+payload = {'__proto__': {'polluted': 'Yes!'}}
+
+# Simulating the pollution
+for key, value in payload['__proto__'].items():
+    setattr(obj, key, value)
+
+# Check if the pollution was successful
+if hasattr(obj, 'polluted') and getattr(obj, 'polluted') == 'Yes!':
+    print('The ACI exploit success!!!')
+else:
+    print('The ACI exploit failed!!!')
