
diff --git a/src/TestProxyServlet.java b/src/TestProxyServlet.java
new file mode 100644
index 00000000..3817c6a1
--- /dev/null
+++ b/src/TestProxyServlet.java
@@ -0,0 +1,21 @@
+import com.mxgraph.online.ProxyServlet;
+import java.util.Arrays;
+import java.util.List;
+
+public class TestProxyServlet {
+    public static void main(String[] args) {
+        ProxyServlet servlet = new ProxyServlet();
+        List<String> testUrls = Arrays.asList(
+            "http://example.com", // Allowed
+            "https://safe-site.org", // Allowed
+            "http://malicious.com", // Not allowed
+            "http://192.168.1.1", // Not allowed
+            "http://localhost", // Not allowed
+            "http://127.0.0.1" // Not allowed
+        );
+
+        for (String url : testUrls) {
+            System.out.println("Testing URL: " + url + " - Allowed: " + servlet.checkUrlParameter(url));
+        }
+    }
+}
diff --git a/src/main/java/com/mxgraph/online/ProxyServlet.java b/src/main/java/com/mxgraph/online/ProxyServlet.java
index 99a88937..a799d366 100644
--- a/src/main/java/com/mxgraph/online/ProxyServlet.java
+++ b/src/main/java/com/mxgraph/online/ProxyServlet.java
@@ -238,65 +238,69 @@ public class ProxyServlet extends HttpServlet
 	/**
 	 * Checks if the URL parameter is legal.
 	 */
-	public boolean checkUrlParameter(String url)
-	{
-		if (url != null)
-		{
-			try
-			{
-				URL parsedUrl = new URL(url);
-				String protocol = parsedUrl.getProtocol();
-				String host = parsedUrl.getHost();
-				InetAddress address = InetAddress.getByName(host);
-				String hostAddress = address.getHostAddress();
-				host = host.toLowerCase();
-
-				return (protocol.equals("http") || protocol.equals("https"))
-						&& !address.isAnyLocalAddress()
-						&& !address.isLoopbackAddress()
-						&& !host.endsWith(".internal") // Redundant
-						&& !host.endsWith(".local") // Redundant
-						&& !host.contains("localhost") // Redundant
-						&& !hostAddress.startsWith("0.") // 0.0.0.0/8 
-						&& !hostAddress.startsWith("10.") // 10.0.0.0/8
-						&& !hostAddress.startsWith("127.") // 127.0.0.0/8
-						&& !hostAddress.startsWith("169.254.") // 169.254.0.0/16
-						&& !hostAddress.startsWith("172.16.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.17.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.18.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.19.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.20.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.21.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.22.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.23.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.24.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.25.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.26.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.27.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.28.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.29.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.30.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("172.31.") // 172.16.0.0/12
-						&& !hostAddress.startsWith("192.0.0.") // 192.0.0.0/24
-						&& !hostAddress.startsWith("192.168.") // 192.168.0.0/16
-						&& !hostAddress.startsWith("198.18.") // 198.18.0.0/15
-						&& !hostAddress.startsWith("198.19.") // 198.18.0.0/15
-						&& !host.endsWith(".arpa"); // reverse domain (needed?)
-			}
-			catch (MalformedURLException e)
-			{
-				return false;
-			}
-			catch (UnknownHostException e)
-			{
-				return false;
-			}
-		}
-		else
-		{
-			return false;
-		}
-	}
+    public boolean checkUrlParameter(String url)
+    {
+        // List of allowed domains
+        List<String> allowedDomains = Arrays.asList("example.com", "safe-site.org");
+
+        if (url != null)
+        {
+            try
+            {
+                URL parsedUrl = new URL(url);
+                String protocol = parsedUrl.getProtocol();
+                String host = parsedUrl.getHost();
+                InetAddress address = InetAddress.getByName(host);
+                String hostAddress = address.getHostAddress();
+                host = host.toLowerCase();
+
+                // Check if the URL's domain is in the allowed list
+                boolean isAllowedDomain = allowedDomains.stream().anyMatch(host::endsWith);
+
+                return (protocol.equals("http") || protocol.equals("https"))
+                        && !address.isAnyLocalAddress()
+                        && !address.isLoopbackAddress()
+                        && isAllowedDomain
+                        && !hostAddress.startsWith("0.") // 0.0.0.0/8 
+                        && !hostAddress.startsWith("10.") // 10.0.0.0/8
+                        && !hostAddress.startsWith("127.") // 127.0.0.0/8
+                        && !hostAddress.startsWith("169.254.") // 169.254.0.0/16
+                        && !hostAddress.startsWith("172.16.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.17.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.18.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.19.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.20.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.21.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.22.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.23.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.24.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.25.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.26.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.27.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.28.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.29.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.30.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("172.31.") // 172.16.0.0/12
+                        && !hostAddress.startsWith("192.0.0.") // 192.0.0.0/24
+                        && !hostAddress.startsWith("192.168.") // 192.168.0.0/16
+                        && !hostAddress.startsWith("198.18.") // 198.18.0.0/15
+                        && !hostAddress.startsWith("198.19.") // 198.18.0.0/15
+                        && !host.endsWith(".arpa"); // reverse domain (needed?)
+            }
+            catch (MalformedURLException e)
+            {
+                return false;
+            }
+            catch (UnknownHostException e)
+            {
+                return false;
+            }
+        }
+        else
+        {
+            return false;
+        }
+    }
 
 	/**
 	 * Returns true if the content check should be omitted.
