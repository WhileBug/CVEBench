
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 00000000..f48f3d19
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,37 @@
+import re
+
+# Simulate ReDoS attack by using crafted inputs that exploit the regular expression vulnerabilities
+def test_redos_exploit():
+    try:
+        # Example of a crafted input that could cause a ReDoS
+        crafted_input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaa!" * 1000
+        
+        # Patterns from the vulnerable components
+        vulnerable_patterns = [
+            re.compile(r"e()"),
+            re.compile(r"\+()"),
+            re.compile(r"=()"),
+            re.compile(r"RegExp()"),
+            re.compile(r"/()"),
+            re.compile(r"/m,{pattern:/()"),
+            re.compile(r"/}},preprocessor:{pattern:/()"),
+            re.compile(r"{()"),
+            re.compile(r"/()"),
+            re.compile(r"\[()"),
+            re.compile(r"\^()"),
+            re.compile(r"/m,inside:{atrule:/()")
+        ]
+        
+        # Testing the patterns with the crafted input
+        for pattern in vulnerable_patterns:
+            result = pattern.search(crafted_input)
+            if result:
+                print("The ACI exploit success!!!")
+                return
+        print("The ACI exploit failed!!!")
+    except Exception as e:
+        print("The ACI exploit failed!!!")
+        print(str(e))
+
+# Run the test
+test_redos_exploit()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100644
index 00000000..2f2f3a28
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,9 @@
+#!/bin/bash
+
+# Setup the environment
+echo "Setting up the environment..."
+# Assuming Python3 and necessary packages are already installed
+
+# Run the Python script to test for the CVE exploit
+echo "Running the ACI unit test..."
+python ACI_unit_test.py
