
diff --git a/server/Application/Api/Controller/AdminSettingController.class.php b/server/Application/Api/Controller/AdminSettingController.class.php
index b236ac4a..c46f3d73 100644
--- a/server/Application/Api/Controller/AdminSettingController.class.php
+++ b/server/Application/Api/Controller/AdminSettingController.class.php
@@ -7,6 +7,11 @@ class AdminSettingController extends BaseController {
     public function saveConfig(){
         $login_user = $this->checkLogin();
         $this->checkAdmin();
+        $csrf_token = I("csrf_token");
+        if (!$this->validateCsrfToken($csrf_token)) {
+            $this->sendError(403, "CSRF token validation failed.");
+            return;
+        }
         $register_open = intval(I("register_open")) ;
         $history_version_count = intval(I("history_version_count")) ;
         $oss_open = intval(I("oss_open")) ;
@@ -25,9 +30,8 @@ class AdminSettingController extends BaseController {
             D("Options")->set("oss_setting" , json_encode( $oss_setting)) ;
         }
         D("Options")->set("oss_open" ,$oss_open) ;
-
+        
         $this->sendResult(array());
-
     }
 
     //加载配置
@@ -234,4 +238,4 @@ class AdminSettingController extends BaseController {
            $this->sendError(10011,"用户名或者密码错误");
     }
 
-}
\ No newline at end of file
+}
diff --git a/test_csrf_protection.php b/test_csrf_protection.php
new file mode 100644
index 00000000..e5e517b4
--- /dev/null
+++ b/test_csrf_protection.php
@@ -0,0 +1,32 @@
+<?php
+include 'server/Application/Api/Controller/AdminSettingController.class.php';
+
+// Simulate a class that would normally handle CSRF token generation and validation
+class MockCsrfHandler {
+    public function validateCsrfToken($token) {
+        return $token == "valid_csrf_token";
+    }
+}
+
+// Extend the AdminSettingController to use the MockCsrfHandler
+class TestAdminSettingController extends AdminSettingController {
+    protected function validateCsrfToken($token) {
+        $csrfHandler = new MockCsrfHandler();
+        return $csrfHandler->validateCsrfToken($token);
+    }
+}
+
+// Create an instance of the test controller
+$testController = new TestAdminSettingController();
+
+// Test with a valid CSRF token
+echo "Test with valid CSRF token:\n";
+$_POST['csrf_token'] = 'valid_csrf_token';
+$testController->saveConfig();
+
+// Test with an invalid CSRF token
+echo "\nTest with invalid CSRF token:\n";
+$_POST['csrf_token'] = 'invalid_csrf_token';
+$testController->saveConfig();
+
+?>
