
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000000..970d288fec
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,38 @@
+import unittest
+from zerver.lib.test_classes import ZulipTestCase
+from zerver.lib.actions import do_change_user_role, do_set_realm_property
+from zerver.models import UserProfile
+
+class InviteByAdminsOnlyTestCase(ZulipTestCase):
+    def test_invite_by_admins_only(self):
+        # Setup test environment and users
+        self.login('iago')
+        user_profile = self.example_user('hamlet')
+        do_change_user_role(user_profile, UserProfile.ROLE_REALM_ADMINISTRATOR)
+        do_set_realm_property(user_profile.realm, 'invite_by_admins_only', True)
+
+        # Try to invite a user as a non-admin
+        self.login('cordelia')
+        response = self.client_post("/json/invites", {"email": "newuser@example.com"})
+        
+        # Check if the invitation was blocked
+        self.assert_json_error(response, "Must be an organization administrator")
+
+        # Try to invite a user as an admin
+        self.login('iago')
+        response = self.client_post("/json/invites", {"email": "newuser@example.com"})
+        
+        # Check if the invitation was successful
+        self.assert_json_success(response)
+
+class ACIUnitTest(unittest.TestCase):
+    def runTest(self):
+        suite = unittest.TestLoader().loadTestsFromTestCase(InviteByAdminsOnlyTestCase)
+        result = unittest.TextTestRunner().run(suite)
+        if result.wasSuccessful():
+            print('The ACI unit test is passed!!!')
+        else:
+            print('The ACI unit test is failed!!!')
+
+if __name__ == '__main__':
+    unittest.main()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000000..4c109ab268
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+
+# Exit on first error
+set -e
+
+# Setup the environment for the repository
+# Assuming the repository requires a virtual environment with Python 3.x
+python3 -m venv venv
+source venv/bin/activate
+
+# Install dependencies (assuming requirements are specified in a requirements.txt file)
+pip install -r requirements.txt
+
+# Run the unit test script
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
