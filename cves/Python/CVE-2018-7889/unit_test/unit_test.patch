
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000000..a1aee872c7
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,18 @@
+import os
+import pickle
+from calibre.gui2.viewer.bookmarkmanager import BookmarkManager
+
+# Attempt to exploit the CVE by loading a crafted pickle file
+def test_import_bookmarks():
+    bm_manager = BookmarkManager(None)
+    crafted_pickle = b"cos\nsystem\n(S'echo exploitable > exploit.txt'\ntR."
+    try:
+        # Simulate the import_bookmarks function call with crafted data
+        bm_manager.import_bookmarks(crafted_pickle)
+        print('The ACI unit test is failed!!!')
+    except pickle.UnpicklingError:
+        # If a pickle.UnpicklingError is raised, the exploit did not succeed
+        print('The ACI unit test is passed!!!')
+
+if __name__ == "__main__":
+    test_import_bookmarks()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000000..8eb2916dfb
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,10 @@
+#!/bin/bash
+
+# Exit on first error
+set -e
+
+# Install the package and dependencies
+python setup.py develop
+
+# Run the unit test script
+python ACI_unit_test_py2.py
diff --git a/ACI_unit_test_py2.py b/ACI_unit_test_py2.py
new file mode 100644
index 0000000000..74fd52c7c8
--- /dev/null
+++ b/ACI_unit_test_py2.py
@@ -0,0 +1,18 @@
+import os
+import pickle
+from calibre.gui2.viewer.bookmarkmanager import BookmarkManager
+
+# Attempt to exploit the CVE by loading a crafted pickle file
+def test_import_bookmarks():
+    bm_manager = BookmarkManager(None)
+    crafted_pickle = b"cos\\nsystem\\n(S'echo exploitable > exploit.txt'\\ntR."
+    try:
+        # Simulate the import_bookmarks function call with crafted data
+        bm_manager.import_bookmarks(crafted_pickle)
+        print('The ACI unit test is failed!!!')
+    except pickle.UnpicklingError:
+        # If a pickle.UnpicklingError is raised, the exploit did not succeed
+        print('The ACI unit test is passed!!!')
+
+if __name__ == "__main__":
+    test_import_bookmarks()
