
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000000..fd38028766
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,30 @@
+import os
+import subprocess
+
+# Function to simulate the symlink attack
+def symlink_attack():
+    try:
+        # Create a symbolic link to a restricted file
+        os.symlink('/etc/passwd', 'symlink_to_passwd')
+
+        # Attempt to read the file via the symlink
+        with open('symlink_to_passwd', 'r') as f:
+            data = f.read()
+
+        # If the file was read successfully, the attack is still possible
+        return True
+    except (OSError, IOError):
+        # If an error occurred, it means the attack was not successful
+        return False
+    finally:
+        # Clean up the symlink if it was created
+        try:
+            os.remove('symlink_to_passwd')
+        except OSError:
+            pass
+
+# Run the symlink attack simulation
+if symlink_attack():
+    print('The ACI unit test is failed!!!')
+else:
+    print('The ACI unit test is passed!!!')
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000000..378a276488
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+# Assuming the README provides instructions for setting up a virtual environment
+# and installing dependencies, the following lines are a general representation
+# of those actions.
+
+# Setup virtual environment (if required) and activate it
+# python3 -m venv venv
+# source venv/bin/activate
+
+# Install dependencies (if any)
+# pip install -r requirements.txt
+
+# Run the unit test script
+python ACI_unit_test.py
