
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000..74ccc5c
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,25 @@
+import jinja2
+from jinja2.sandbox import SandboxedEnvironment
+
+def test_sandbox_escape():
+    try:
+        # Attempt to exploit the sandbox escape
+        env = SandboxedEnvironment()
+        template = env.from_string("{{ ''.__class__.__mro__[2].__subclasses__() }}")
+        result = template.render()
+        
+        # If the exploit succeeds, this will be a non-empty string
+        if result:
+            print('The ACI unit test is failed!!!')
+            return False
+    except jinja2.exceptions.SecurityError:
+        # If a SecurityError is raised, the sandbox escape was not successful
+        print('The ACI unit test is passed!!!')
+        return True
+
+    # If no exception was raised, but the result is empty, the test passes
+    print('The ACI unit test is passed!!!')
+    return True
+
+if __name__ == "__main__":
+    test_sandbox_escape()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000..8b13789
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1 @@
+
diff --git a/README.rst b/README.rst
index 0684e8a..a81f538 100644
--- a/README.rst
+++ b/README.rst
@@ -1,49 +1,16 @@
-Jinja2
-~~~~~~
+#!/bin/bash
 
-Jinja2 is a template engine written in pure Python.  It provides a
-`Django`_ inspired non-XML syntax but supports inline expressions and
-an optional `sandboxed`_ environment.
+# Create a virtual environment
+python3 -m venv venv
 
-Nutshell
---------
+# Activate the virtual environment
+source venv/bin/activate
 
-Here a small example of a Jinja template::
+# Install Jinja2 (assuming it's required for the test, as it's the main package of the repo)
+pip install Jinja2
 
-    {% extends 'base.html' %}
-    {% block title %}Memberlist{% endblock %}
-    {% block content %}
-      <ul>
-      {% for user in users %}
-        <li><a href="{{ user.url }}">{{ user.username }}</a></li>
-      {% endfor %}
-      </ul>
-    {% endblock %}
+# Run the unit test script
+python ACI_unit_test.py
 
-Philosophy
-----------
-
-Application logic is for the controller, but don't make the template designer's
-life difficult by restricting functionality too much.
-
-For more information visit the new `Jinja2 webpage`_ and `documentation`_.
-
-The `Jinja2 tip`_ is installable via `easy_install` with ``easy_install
-Jinja2==dev``.
-
-.. _sandboxed: http://en.wikipedia.org/wiki/Sandbox_(computer_security)
-.. _Django: http://www.djangoproject.com/
-.. _Jinja2 webpage: http://jinja.pocoo.org/
-.. _documentation: http://jinja.pocoo.org/docs/
-.. _Jinja2 tip: http://jinja.pocoo.org/docs/intro/#as-a-python-egg-via-easy-install
-
-Builds
-------
-
-+---------------------+------------------------------------------------------------------------------+
-| ``master``          | .. image:: https://travis-ci.org/mitsuhiko/jinja2.svg?branch=master          |
-|                     |     :target: https://travis-ci.org/mitsuhiko/jinja2                          |
-+---------------------+------------------------------------------------------------------------------+
-| ``2.7-maintenance`` | .. image:: https://travis-ci.org/mitsuhiko/jinja2.svg?branch=2.7-maintenance |
-|                     |     :target: https://travis-ci.org/mitsuhiko/jinja2                          |
-+---------------------+------------------------------------------------------------------------------+
+# Deactivate the virtual environment
+deactivate
