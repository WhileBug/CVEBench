import unittest
from wagtail.admin.views.pages.edit import send_commenting_notifications
from wagtail.core.models import Page, User

class TestSendCommentingNotifications(unittest.TestCase):
    def setUp(self):
        # Set up users and pages
        self.user1 = User.objects.create_user(username='user1', email='user1@example.com')
        self.user2 = User.objects.create_user(username='user2', email='user2@example.com')
        self.user3 = User.objects.create_user(username='user3', email='user3@example.com')
        self.page = Page.objects.create(title='Test Page')

        # User1 comments on the page
        self.comment1 = self.page.comments.create(user=self.user1, text='User1 comment')

        # User2 replies to User1's comment
        self.comment2 = self.comment1.replies.create(user=self.user2, text='User2 reply')

    def test_send_commenting_notifications(self):
        # User3 comments on the page, should not notify User1 or User2
        self.comment3 = self.page.comments.create(user=self.user3, text='User3 comment')
        send_commenting_notifications(self.comment3)

        # Check that User1 and User2 did not receive a notification
        self.assertEqual(len(self.user1.notifications.all()), 0)
        self.assertEqual(len(self.user2.notifications.all()), 0)

        # User1 replies to User3's comment, should notify User3 only
        self.comment4 = self.comment3.replies.create(user=self.user1, text='User1 reply to User3')
        send_commenting_notifications(self.comment4)

        # Check that User3 received a notification and User2 did not
        self.assertEqual(len(self.user3.notifications.all()), 1)
        self.assertEqual(len(self.user2.notifications.all()), 0)

if __name__ == '__main__':
    try:
        unittest.main()
        print('The ACI unit test is passed!!!')
    except Exception as e:
        print('The ACI unit test is failed!!!')
        print(str(e))
