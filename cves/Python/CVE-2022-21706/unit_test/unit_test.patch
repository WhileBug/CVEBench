
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000000..9dfadc3129
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,25 @@
+import unittest
+from zerver.views.registration import accounts_home_from_multiuse_invite
+from zerver.tests.test_auth_backends import test_social_auth_registration_using_multiuse_invite_realm_validation
+from zerver.tests.test_signup import test_multiuse_link_different_realms
+
+class TestMultiUseInvite(unittest.TestCase):
+    def test_multiuse_invite_security(self):
+        # Simulate the scenario where an invitation is used across organizations
+        # This should not be allowed if the fix is successful
+        result = accounts_home_from_multiuse_invite()
+        self.assertIsNone(result, "Invitation should not be valid across organizations")
+
+        # Run additional provided test cases
+        test_social_auth_registration_using_multiuse_invite_realm_validation()
+        test_multiuse_link_different_realms()
+
+        # If no exceptions are raised, the test passes
+        print('The ACI unit test is passed!!!')
+
+if __name__ == '__main__':
+    try:
+        unittest.main()
+    except Exception as e:
+        print('The ACI unit test is failed!!!')
+        print(str(e))
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000000..51284a17c7
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,20 @@
+#!/bin/bash
+
+# Exit in case of error
+set -e
+
+# Create a Python virtual environment
+python3 -m venv venv
+
+# Activate the virtual environment
+source venv/bin/activate
+
+# Install the necessary dependencies
+# Assuming 'requirements.txt' is present and contains all the necessary packages
+pip install -r requirements.txt
+
+# Run the unit test script
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
