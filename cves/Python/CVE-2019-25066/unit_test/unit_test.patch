
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 000000000..6da9b10b8
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,20 @@
+import ajenti_core.aj.auth as auth
+
+# Mock data that would represent a malicious attempt to exploit the CVE
+# This data should be crafted in a way that would have exploited the vulnerability
+# before the fix was applied.
+malicious_data = {
+    'username': 'admin',  # Typically, an attacker would try to gain admin access
+    'password': 'malicious_password'  # A guessed or brute-forced password
+}
+
+# Attempt to authenticate using the malicious data
+try:
+    user = auth.authenticate(**malicious_data)
+    if user:
+        print('The ACI unit test is failed!!!')
+    else:
+        print('The ACI unit test is passed!!!')
+except Exception as e:
+    # If an exception occurs, it means the exploit did not succeed
+    print('The ACI unit test is passed!!!')
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 000000000..6d6b781ff
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+# Assuming the repository requires a virtual environment and dependency installation
+# Create a virtual environment
+python3 -m venv venv
+
+# Activate the virtual environment
+source venv/bin/activate
+
+# Install dependencies (assuming there's a requirements.txt file)
+pip install -r requirements.txt
+
+# Run the unit test script
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
