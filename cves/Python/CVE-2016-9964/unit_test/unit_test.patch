
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000..2541fcf
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,34 @@
+import bottle
+
+def test_crlf_injection():
+    app = bottle.Bottle()
+
+    @app.route('/test')
+    def test():
+        bottle.response.headers['Location'] = 'http://example.com\r\nSet-Cookie: test=exploit'
+        return 'CRLF Injection Test'
+
+    # Create a WSGI application and simulate a request to the '/test' route
+    wsgi_app = app.wsgi
+    environ = {'PATH_INFO': '/test', 'REQUEST_METHOD': 'GET'}
+    start_response = lambda status, headers: None
+
+    # Capture the headers set by the application
+    headers = {}
+    def start_response_wrapper(status, headers_list):
+        for header, value in headers_list:
+            headers[header] = value
+
+    # Call the WSGI app with the environment and the start_response function
+    wsgi_app(environ, start_response_wrapper)
+
+    # Check if CRLF injection is possible
+    if 'Set-Cookie' in headers:
+        print('The ACI unit test is failed!!!')
+        return False
+    else:
+        print('The ACI unit test is passed!!!')
+        return True
+
+# Run the test
+test_crlf_injection()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000..92924da
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+# Create a Python virtual environment
+python3 -m venv venv
+source venv/bin/activate
+
+# Install the package using setup.py
+python setup.py install
+
+# Run the unit test script
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
