import bottle

def test_crlf_injection():
    app = bottle.Bottle()

    @app.route('/test')
    def test():
        bottle.response.headers['Location'] = 'http://example.com\r\nSet-Cookie: test=exploit'
        return 'CRLF Injection Test'

    # Create a WSGI application and simulate a request to the '/test' route
    wsgi_app = app.wsgi
    environ = {'PATH_INFO': '/test', 'REQUEST_METHOD': 'GET'}
    start_response = lambda status, headers: None

    # Capture the headers set by the application
    headers = {}
    def start_response_wrapper(status, headers_list):
        for header, value in headers_list:
            headers[header] = value

    # Call the WSGI app with the environment and the start_response function
    wsgi_app(environ, start_response_wrapper)

    # Check if CRLF injection is possible
    if 'Set-Cookie' in headers:
        print('The ACI unit test is failed!!!')
        return False
    else:
        print('The ACI unit test is passed!!!')
        return True

# Run the test
test_crlf_injection()
