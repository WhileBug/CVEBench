
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 00000000..c829c6f8
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,33 @@
+import yaml
+import io
+
+# This is a YAML string that, if deserialized unsafely, would execute `print('Executed!')`
+exploit_yaml = '''
+!!python/object/apply:os.system ["echo Executed! > exploit_output.txt"]
+'''
+
+# Function to test for the CVE exploit
+def test_for_cve():
+    try:
+        # Attempt to load the YAML using the unsafe method
+        yaml.load(exploit_yaml, Loader=yaml.UnsafeLoader)
+    except yaml.YAMLError as e:
+        print('The ACI unit test is passed!!!')
+        return
+    except Exception as e:
+        print('The ACI unit test is failed!!!')
+        return
+
+    # Check if the exploit code was executed
+    try:
+        with io.open('exploit_output.txt', 'r') as file:
+            output = file.read().strip()
+            if output == 'Executed!':
+                print('The ACI unit test is failed!!!')
+            else:
+                print('The ACI unit test is passed!!!')
+    except FileNotFoundError:
+        print('The ACI unit test is passed!!!')
+
+# Run the test
+test_for_cve()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100644
index 00000000..412b3b5f
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,23 @@
+#!/bin/bash
+
+# Exit immediately if a command exits with a non-zero status.
+set -e
+
+# Create a Python virtual environment
+echo "Creating a Python virtual environment..."
+python3 -m venv parlai_venv
+source parlai_venv/bin/activate
+
+# Install ParlAI in development mode
+echo "Cloning ParlAI repository and installing in development mode..."
+git clone https://github.com/facebookresearch/ParlAI.git ~/ParlAI
+cd ~/ParlAI; python setup.py develop
+
+# Navigate back to the original directory and run the unit test
+cd - 
+echo "Running ACI unit test..."
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
+echo "ACI unit test script execution completed."
