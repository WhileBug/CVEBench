import time
from django.contrib.auth.hashers import check_password

# Simulate user data
user_data = {
    'username': 'test_user',
    'password': 'correcthorsebatterystaple',
    'hashed_password': 'hashed_version_of_correct_password'
}

# Function to measure the time of check_password
def time_check_password(password, hashed_password):
    start_time = time.time()
    check_password(password, hashed_password)
    end_time = time.time()
    return end_time - start_time

# Measure time for correct and incorrect passwords
correct_time = time_check_password(user_data['password'], user_data['hashed_password'])
incorrect_time = time_check_password('wrongpassword', user_data['hashed_password'])

# The threshold for the time difference should be negligible
# This value may need adjustment based on the environment and expected performance
TIME_DIFFERENCE_THRESHOLD = 0.001  # in seconds

# Check if the time difference is within the acceptable range
if abs(correct_time - incorrect_time) < TIME_DIFFERENCE_THRESHOLD:
    print('The ACI unit test is passed!!!')
else:
    print('The ACI unit test is failed!!!')
