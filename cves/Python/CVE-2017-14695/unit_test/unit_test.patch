
diff --git a/ACI_unit_test.py b/ACI_unit_test.py
new file mode 100644
index 0000000000..de1826ccf6
--- /dev/null
+++ b/ACI_unit_test.py
@@ -0,0 +1,25 @@
+import unittest
+from salt.utils.verify import clean_id, valid_id
+
+class TestCVE(unittest.TestCase):
+    def test_valid_id_pathsep(self):
+        # List of crafted minion IDs that represent potential directory traversal attempts
+        malicious_ids = [
+            '../etc/passwd',
+            '..\\etc\\passwd',
+            '/etc/passwd',
+            '|etc|passwd',
+            '..././..././etc/passwd',
+            'etc/passwd\0',
+            'etc/passwd\x00',
+            'etc/passwd%00',
+            '..%c0%af..%c0%afetc/passwd',
+            '..%c1%9c..%c1%9cetc/passwd'
+        ]
+        # Test each malicious ID to ensure they are rejected
+        for mid in malicious_ids:
+            self.assertFalse(valid_id(mid), f"Minion ID {mid} should not be valid")
+            self.assertNotEqual(clean_id(mid), mid, f"Minion ID {mid} should be cleaned")
+
+if __name__ == '__main__':
+    unittest.main()
diff --git a/ACI_unit_test.sh b/ACI_unit_test.sh
new file mode 100755
index 0000000000..0ee8ff9e1a
--- /dev/null
+++ b/ACI_unit_test.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+
+# Create a Python virtual environment
+python3 -m venv venv
+
+# Activate the virtual environment
+source venv/bin/activate
+
+# Install dependencies if a requirements file exists
+if [ -f requirements.txt ]; then
+    pip install -r requirements.txt
+fi
+
+# Run the unit test script
+python ACI_unit_test.py
+
+# Deactivate the virtual environment
+deactivate
