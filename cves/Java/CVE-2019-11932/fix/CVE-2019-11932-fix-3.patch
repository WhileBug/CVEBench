
diff --git a/android-gif-drawable/src/main/c/decoding.c b/android-gif-drawable/src/main/c/decoding.c
index 18c5322..11c69a8 100644
--- a/android-gif-drawable/src/main/c/decoding.c
+++ b/android-gif-drawable/src/main/c/decoding.c
@@ -59,15 +59,17 @@ void DDGifSlurp(GifInfo *info, bool decode, bool exitAfterFrame) {
 					int_fast32_t widthOverflow = gifFilePtr->Image.Width - info->originalWidth;
 					int_fast32_t heightOverflow = gifFilePtr->Image.Height - info->originalHeight;
 					const uint_fast32_t newRasterSize = gifFilePtr->Image.Width * gifFilePtr->Image.Height;
-					if (newRasterSize > info->rasterSize || widthOverflow > 0 || heightOverflow > 0) {
-						void *tmpRasterBits = reallocarray(info->rasterBits, newRasterSize, sizeof(GifPixelType));
-						if (tmpRasterBits == NULL) {
-							gifFilePtr->Error = D_GIF_ERR_NOT_ENOUGH_MEM;
-							break;
-						}
-						info->rasterBits = tmpRasterBits;
-						info->rasterSize = newRasterSize;
-					}
+                    if (newRasterSize > info->rasterSize || widthOverflow > 0 || heightOverflow > 0) {
+                        void *tmpRasterBits = reallocarray(info->rasterBits, newRasterSize, sizeof(GifPixelType));
+                        if (tmpRasterBits == NULL) {
+                            gifFilePtr->Error = D_GIF_ERR_NOT_ENOUGH_MEM;
+                            free(info->rasterBits);  // Free the original memory to prevent memory leak
+                            info->rasterBits = NULL; // Avoid dangling pointer
+                            break;
+                        }
+                        info->rasterBits = tmpRasterBits;
+                        info->rasterSize = newRasterSize;
+                    }
 					if (gifFilePtr->Image.Interlace) {
 						uint_fast16_t i, j;
 						/*
