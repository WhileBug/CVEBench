
diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java
index ddd68c74d9..303ee329b1 100644
--- a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java
+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java
@@ -366,52 +366,46 @@ public class DefaultHttpHeaders extends HttpHeaders {
     }
 
     private static void validateHeaderNameElement(byte value) {
-        switch (value) {
-        case 0x00:
-        case '\t':
-        case '\n':
-        case 0x0b:
-        case '\f':
-        case '\r':
-        case ' ':
-        case ',':
-        case ':':
-        case ';':
-        case '=':
-            throw new IllegalArgumentException(
-               "a header name cannot contain the following prohibited characters: =,;: \\t\\r\\n\\v\\f: " +
-                       value);
-        default:
-            // Check to see if the character is not an ASCII character, or invalid
-            if (value < 0) {
-                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);
+        // Prohibited characters that should not be at the beginning or end of a header name
+        final byte[] prohibited = {0x00, '\t', '\n', 0x0b, '\f', '\r', ' ', ',', ':', ';', '='};
+        boolean isProhibited = false;
+        for (byte b : prohibited) {
+            if (value == b) {
+                isProhibited = true;
+                break;
             }
         }
+        if (isProhibited) {
+            throw new IllegalArgumentException(
+                "a header name cannot start or end with the following prohibited characters: =,;: \\t\\r\\n\\v\\f: " +
+                value);
+        }
+        // Check to see if the character is not an ASCII character, or invalid
+        if (value < 0) {
+            throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);
+        }
     }
 
     private static void validateHeaderNameElement(char value) {
-        switch (value) {
-        case 0x00:
-        case '\t':
-        case '\n':
-        case 0x0b:
-        case '\f':
-        case '\r':
-        case ' ':
-        case ',':
-        case ':':
-        case ';':
-        case '=':
-            throw new IllegalArgumentException(
-               "a header name cannot contain the following prohibited characters: =,;: \\t\\r\\n\\v\\f: " +
-                       value);
-        default:
-            // Check to see if the character is not an ASCII character, or invalid
-            if (value > 127) {
-                throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " +
-                        value);
+        // Prohibited characters that should not be at the beginning or end of a header name
+        final char[] prohibited = {0x00, '\t', '\n', 0x0b, '\f', '\r', ' ', ',', ':', ';', '='};
+        boolean isProhibited = false;
+        for (char c : prohibited) {
+            if (value == c) {
+                isProhibited = true;
+                break;
             }
         }
+        if (isProhibited) {
+            throw new IllegalArgumentException(
+                "a header name cannot start or end with the following prohibited characters: =,;: \\t\\r\\n\\v\\f: " +
+                value);
+        }
+        // Check to see if the character is not an ASCII character, or invalid
+        if (value > 127) {
+            throw new IllegalArgumentException("a header name cannot contain non-ASCII character: " + value);
+        }
+    }
     }
 
     static ValueConverter<CharSequence> valueConverter(boolean validate) {
