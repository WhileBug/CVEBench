
diff --git a/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/FileBitPatternInfoReader.java b/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/FileBitPatternInfoReader.java
index 56c2fa5f28..7d3b544d03 100644
--- a/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/FileBitPatternInfoReader.java
+++ b/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/FileBitPatternInfoReader.java
@@ -183,16 +183,26 @@ public class FileBitPatternInfoReader {
 		}
 		numFiles++;
 
-		FileBitPatternInfo fileInfo = null;
-		try (XMLDecoder xmlDecoder = new XMLDecoder(new FileInputStream(dataFile))) {
-			fileInfo = (FileBitPatternInfo) xmlDecoder.readObject();
-		}
-		catch (ArrayIndexOutOfBoundsException e) {
-			// Probably wrong type of XML file...skip
-		}
-		catch (IOException e) {
-			Msg.error(this, "IOException", e);
-		}
+        try {
+            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
+            dbFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+            dbFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+            dbFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+            dbFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+            dbFactory.setXIncludeAware(false);
+            dbFactory.setExpandEntityReferences(false);
+
+            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
+            Document doc = dBuilder.parse(dataFile);
+            doc.getDocumentElement().normalize();
+
+            // Example of how you might begin to use the Document object to get data
+            // This is a placeholder and should be replaced with actual data extraction logic
+            Node rootNode = doc.getDocumentElement();
+            // Extract necessary information from rootNode here
+        } catch (Exception e) {
+            Msg.error(this, "Error processing XML file", e);
+        }
 		if (fileInfo == null) {
 			Msg.info(this, "null FileBitPatternInfo for " + dataFile);
 			return;
