
diff --git a/confirmation/models.py b/confirmation/models.py
index 03e6fdce35..3024bcf981 100644
--- a/confirmation/models.py
+++ b/confirmation/models.py
@@ -59,7 +59,7 @@ ConfirmationObjT = Union[MultiuseInvite, PreregistrationUser, EmailChangeStatus]
 
 
 def get_object_from_key(
-    confirmation_key: str, confirmation_types: List[int], activate_object: bool = True
+    confirmation_key: str, confirmation_types: List[int], request_realm: Realm, activate_object: bool = True
 ) -> ConfirmationObjT:
     # Confirmation keys used to be 40 characters
     if len(confirmation_key) not in (24, 40):
@@ -76,6 +76,11 @@ def get_object_from_key(
 
     obj = confirmation.content_object
     assert obj is not None
+
+    # Check if the object's realm matches the request's realm
+    if not hasattr(obj, 'realm') or obj.realm != request_realm:
+        raise ConfirmationKeyException(ConfirmationKeyException.DOES_NOT_EXIST)
+
     if activate_object and hasattr(obj, "status"):
         obj.status = getattr(settings, "STATUS_ACTIVE", 1)
         obj.save(update_fields=["status"])
diff --git a/zerver/views/registration.py b/zerver/views/registration.py
index e0b160980a..0177f7dce7 100644
--- a/zerver/views/registration.py
+++ b/zerver/views/registration.py
@@ -135,8 +135,11 @@ def check_prereg_key(request: HttpRequest, confirmation_key: str) -> Preregistra
         Confirmation.INVITATION,
         Confirmation.REALM_CREATION,
     ]
+    
+    # Retrieve the realm from the request
+    request_realm = get_realm_from_request(request)
 
-    prereg_user = get_object_from_key(confirmation_key, confirmation_types, activate_object=False)
+    prereg_user = get_object_from_key(confirmation_key, confirmation_types, request_realm, activate_object=False)
 
     if prereg_user.status == confirmation_settings.STATUS_REVOKED:
         raise ConfirmationKeyException(ConfirmationKeyException.EXPIRED)
@@ -728,7 +731,9 @@ def accounts_home(
 def accounts_home_from_multiuse_invite(request: HttpRequest, confirmation_key: str) -> HttpResponse:
     multiuse_object = None
     try:
-        multiuse_object = get_object_from_key(confirmation_key, [Confirmation.MULTIUSE_INVITE])
+        # Retrieve the realm from the request
+        request_realm = get_realm_from_request(request)
+        multiuse_object = get_object_from_key(confirmation_key, [Confirmation.MULTIUSE_INVITE], request_realm)
         # Required for OAuth 2
     except ConfirmationKeyException as exception:
         realm = get_realm_from_request(request)
