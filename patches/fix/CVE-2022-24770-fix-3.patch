
diff --git a/gradio/flagging.py b/gradio/flagging.py
index f34bc3ee5..0166c657f 100644
--- a/gradio/flagging.py
+++ b/gradio/flagging.py
@@ -116,6 +116,15 @@ class CSVLogger(FlaggingCallback):
         self.flagging_dir = flagging_dir
         os.makedirs(flagging_dir, exist_ok=True)
 
+    def sanitize_for_csv(self, value: Any) -> Any:
+        """
+        Sanitizes a value for safe CSV output by escaping characters that
+        could be interpreted as the start of a formula.
+        """
+        if isinstance(value, str) and value and value[0] in "=+-@":
+            return "'" + value
+        return value
+
     def flag(
         self,
         interface: gr.Interface,
@@ -135,23 +144,25 @@ class CSVLogger(FlaggingCallback):
             csv_data = []
             if not output_only_mode:
                 for i, input in enumerate(interface.input_components):
+                    sanitized_input = self.sanitize_for_csv(input_data[i])
                     csv_data.append(
                         input.save_flagged(
                             flagging_dir,
                             interface.config["input_components"][i]["label"],
-                            input_data[i],
+                            sanitized_input,
                             encryption_key,
                         )
                     )
             for i, output in enumerate(interface.output_components):
+                sanitized_output = self.sanitize_for_csv(output_data[i])
                 csv_data.append(
                     output.save_flagged(
                         flagging_dir,
                         interface.config["output_components"][i]["label"],
-                        output_data[i],
+                        sanitized_output,
                         encryption_key,
                     )
-                    if output_data[i] is not None
+                    if sanitized_output is not None
                     else ""
                 )
             if not output_only_mode:
