
diff --git a/test_non_admin_cannot_escalate_bot_to_admin_role.py b/test_non_admin_cannot_escalate_bot_to_admin_role.py
new file mode 100644
index 0000000000..15a282d343
--- /dev/null
+++ b/test_non_admin_cannot_escalate_bot_to_admin_role.py
@@ -0,0 +1,25 @@
+from zerver.lib.test_classes import ZulipTestCase
+from zerver.models import UserProfile, get_realm, get_user
+from zerver.actions.users import do_change_user_role
+
+class TestNonAdminCannotEscalateBotToAdminRole(ZulipTestCase):
+    def test_non_admin_cannot_escalate_bot_to_admin_role(self) -> None:
+        # Login as a non-admin user
+        self.login("hamlet")
+        user_profile = self.example_user("hamlet")
+
+        # Create a bot as a non-admin user
+        bot_info = {
+            "full_name": "Test Bot",
+            "short_name": "test-bot",
+        }
+        result = self.client_post("/json/bots", bot_info)
+        self.assert_json_success(result)
+        bot = result.json()['bot']
+
+        # Try to escalate the bot to an admin role
+        do_change_user_role(bot, UserProfile.ROLE_REALM_ADMINISTRATOR, acting_user=user_profile)
+
+        # Fetch the updated bot user to verify its role has not changed
+        bot_user = get_user(bot['email'], get_realm("zulip"))
+        self.assertNotEqual(bot_user.role, UserProfile.ROLE_REALM_ADMINISTRATOR)
